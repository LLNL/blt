environment:
  matrix:
  - CMAKE_GENERATOR: "Visual Studio 14 2015"
    CONFIG: Release
    BUILD_SHARED_LIBS: ON
    ENABLE_GMOCK: OFF
    ENABLE_BENCHMARKS: OFF
    ENABLE_MPI: OFF
    MPI_HOME: "C:/Program Files (x86)/Microsoft SDKs/MPI"
  - CMAKE_GENERATOR: "Visual Studio 14 2015"
    CONFIG: Release
    BUILD_SHARED_LIBS: OFF
    ENABLE_GMOCK: ON
    ENABLE_BENCHMARKS: ON
    ENABLE_MPI: OFF
    MPI_HOME: "C:/Program Files (x86)/Microsoft SDKs/MPI"
  - CMAKE_GENERATOR: "Visual Studio 14 2015"
    CONFIG: Release
    BUILD_SHARED_LIBS: OFF
    ENABLE_GMOCK: OFF
    ENABLE_BENCHMARKS: OFF
    ENABLE_MPI: ON
    MPI_HOME: "C:/Program Files (x86)/Microsoft SDKs/MPI"

init:
  # line endings magic
  - git config --global core.autocrlf input
  # set git user info 
  - git config --global user.email "bltdev@llnl.gov"
  - git config --global user.name "BLT Robot"  

install:
  # Install MS-MPI
  - ps: Start-FileDownload 'https://download.microsoft.com/download/B/2/E/B2EB83FE-98C2-4156-834A-E1711E6884FB/MSMpiSetup.exe'
  - MSMpiSetup.exe -unattend
  - set PATH=C:\Program Files\Microsoft MPI\Bin;%PATH%

  # Install MS-MPI SDK
  - ps: Start-FileDownload 'https://download.microsoft.com/download/B/2/E/B2EB83FE-98C2-4156-834A-E1711E6884FB/msmpisdk.msi'
  - msmpisdk.msi /passive
  
  # Install CMake 3.9
  ############################################################################
  #- ps: Start-FileDownload 'https://cmake.org/files/v3.9/cmake-3.9.6-win64-x64.msi'
  - ps: Start-FileDownload 'http://portal.nersc.gov/project/visit/cmake/cmake-3.9.6-win64-x64.msi'
  - cmake-3.9.6-win64-x64.msi /passive
  - set PATH=C:\Program Files\CMake\bin;%PATH%
  - cmake --version
  
before_build:
  # remove some noisy warnings from Xamarin
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  # copy blt into blt-test and setup to build there
  - ps: cd ..
  - mkdir build
  - cp -r blt\tests\internal blt-test
  # create a git repo for blt-test to test the git macros
  - cd blt-test
  - git init
  - git add -A
  - git commit -a -m "Initial Commit"
  - git checkout -b test-branch
  - git tag test-tag  
  - cd ..\build

build_script:
  #########################################################
  #########################################################
  # blt-test
  #########################################################
  #########################################################
  # configure
  - echo Running cmake ...
  - cmake -G "%CMAKE_GENERATOR%" ^
      -D BLT_SOURCE_DIR:PATH="c:\projects\blt" ^
      -D BUILD_SHARED_LIBS=%BUILD_SHARED_LIBS% ^
      -D ENABLE_GMOCK=%ENABLE_GMOCK% ^
      -D ENABLE_BENCHMARKS=%ENABLE_BENCHMARKS% ^
      -D ENABLE_OPENMP=ON ^
      -D ENABLE_MPI=%ENABLE_MPI% ^
      -D MPI_C_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_C_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      -D MPI_CXX_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_CXX_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      -D TEST_GIT_MACROS=ON ^
      ..\blt-test
  - cd ..
  #build
  - echo Building blt-test ...
  - cmake --build build --config %CONFIG%
  # run our tests
  - cmake -E env CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --config %CONFIG% --target RUN_TESTS
  - cd ..
  #########################################################
  #########################################################
  #  tutorial tests
  #########################################################
  #########################################################
  #########################################################
  # test docs/tutorial/blank_project
  #########################################################
  - mkdir build-tutorial_blank_project
  - cd build-tutorial_blank_project
  - echo Running cmake ...
  - cmake -G "%CMAKE_GENERATOR%" ^
      -D BLT_SOURCE_DIR:PATH="c:\projects\blt" ^
      -D BUILD_SHARED_LIBS=%BUILD_SHARED_LIBS% ^
      -D ENABLE_GMOCK=%ENABLE_GMOCK% ^
      -D ENABLE_BENCHMARKS=%ENABLE_BENCHMARKS% ^
      -D ENABLE_OPENMP=ON ^
      -D ENABLE_MPI=%ENABLE_MPI% ^
      -D MPI_C_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_C_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      -D MPI_CXX_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_CXX_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      c:\projects\blt\docs\tutorial\blank_project
  - cd ..
  #build
  - echo Building Tutorial Blank Project ...
  - cmake --build build-tutorial_blank_project --config %CONFIG%
  # run our tests
  - cmake -E env CTEST_OUTPUT_ON_FAILURE=1 cmake --build build-tutorial_blank_project --config %CONFIG% --target RUN_TESTS
  - cd ..
  #########################################################
  # test docs/tutorial/calc_pi
  #########################################################
  - mkdir build-tutorial_calc_pi
  - cd build-tutorial_calc_pi
  - cmake -G "%CMAKE_GENERATOR%" ^
      -D BLT_SOURCE_DIR:PATH="c:\projects\blt" ^
      -D BUILD_SHARED_LIBS=%BUILD_SHARED_LIBS% ^
      -D ENABLE_GMOCK=%ENABLE_GMOCK% ^
      -D ENABLE_BENCHMARKS=%ENABLE_BENCHMARKS% ^
      -D ENABLE_OPENMP=ON ^
      -D ENABLE_MPI=%ENABLE_MPI% ^
      -D MPI_C_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_C_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      -D MPI_CXX_INCLUDE_PATH:PATH="%MPI_HOME%/Include" ^
      -D MPI_CXX_LIBRARIES:PATH="%MPI_HOME%/Lib/x86/msmpi.lib" ^
      c:\projects\blt\docs\tutorial\calc_pi
  - cd ..
  #build
  - echo Building Tutorial Calc Pi ...
  - cmake --build build-tutorial_calc_pi --config %CONFIG%
  # run our tests
  - cmake -E env CTEST_OUTPUT_ON_FAILURE=1 cmake --build build-tutorial_calc_pi --config %CONFIG% --target RUN_TESTS
  - cd ..

on_failure:
  - ps: |
      Write-Output "CMakeOutput.log"
      cat c:\projects\build\CMakeFiles\CMakeOutput.log
      Write-Output "CMakeError.log"
      cat c:\projects\build\CMakeFiles\CMakeError.log

