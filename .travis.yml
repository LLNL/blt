###############################################################################
# Copyright (c) 2017, Lawrence Livermore National Security, LLC.
#
# Produced at the Lawrence Livermore National Laboratory
#
# LLNL-CODE-725085
#
# All rights reserved.
#
# This file is part of BLT.
#
# For additional details, please also read BLT/LICENSE.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the disclaimer below.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the disclaimer (as noted below) in the
#   documentation and/or other materials provided with the distribution.
#
# * Neither the name of the LLNS/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
###############################################################################

sudo: false

language: cpp
compiler:
  - gcc
env:
  global:
    # we need to know the root dir for our 3rd party lib installs
    - TRAVIS_HOME=`pwd`/..
    - TRAVIS_TPLS_DIR=${TRAVIS_HOME}/tpls
  matrix:
    # gcc w/ cmake 3.3.1
    - CMAKE_MAJOR=3.3
      CMAKE_MINOR=1
      BLT_CC=gcc-4.9
      BLT_CXX=g++-4.9
      BLT_FC=gfortran-4.9
      BLT_FORTRAN=ON
      BLT_OPENMP=ON
      BLT_GTEST=ON
      BLT_FRUIT=ON
      BLT_GMOCK=OFF
    # gcc w/ cmake 3.4.1
    - CMAKE_MAJOR=3.4
      CMAKE_MINOR=1
      BLT_CC=gcc-4.9
      BLT_CXX=g++-4.9
      BLT_FC=gfortran-4.9
      BLT_FORTRAN=ON
      BLT_OPENMP=ON
      BLT_GTEST=ON
      BLT_FRUIT=ON
      BLT_GMOCK=OFF
    # gcc w/ cmake 3.8.0
    - CMAKE_MAJOR=3.8
      CMAKE_MINOR=0
      BLT_CC=gcc-4.9
      BLT_CXX=g++-4.9
      BLT_FC=gfortran-4.9
      BLT_FORTRAN=ON
      BLT_OPENMP=ON
      BLT_GTEST=ON
      BLT_FRUIT=ON
      BLT_GMOCK=OFF
    # gcc w/ cmake 3.8.0, gmock on
    - CMAKE_MAJOR=3.8
      CMAKE_MINOR=0
      BLT_CC=gcc-4.9
      BLT_CXX=g++-4.9
      BLT_FC=gfortran-4.9
      BLT_FORTRAN=ON
      BLT_OPENMP=ON
      BLT_GTEST=ON
      BLT_FRUIT=ON
      BLT_GMOCK=ON
    # gcc w/ cmake 3.8.0, gtest and fruit off
    - CMAKE_MAJOR=3.8
      CMAKE_MINOR=0
      BLT_CC=gcc-4.9
      BLT_CXX=g++-4.9
      BLT_FC=gfortran-4.9
      BLT_FORTRAN=ON
      BLT_GTEST=OFF
      BLT_FRUIT=OFF
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
       - gcc-4.9
       - g++-4.9
       - gfortran-4.9
       - mpich2
       - libmpich2-dev
before_install:
  # workaround apt related for error:
  # Err:6 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty InRelease
  # The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 1E9377A2BA9EF27F
  - sudo apt update -o Acquire::Retries=100 -o Acquire::http::Timeout="60" -o Acquire::AllowInsecureRepositories=true -o Acquire::AllowDowngradeToInsecureRepositories=true

  # download the ver of cmake we want to test
  - wget --no-check-certificate http://www.cmake.org/files/v${CMAKE_MAJOR}/cmake-${CMAKE_MAJOR}.${CMAKE_MINOR}-Linux-x86_64.sh
install:
  # install cmake
  - mkdir -p ${TRAVIS_TPLS_DIR}/cmake/
  - sh cmake-${CMAKE_MAJOR}.${CMAKE_MINOR}-Linux-x86_64.sh --skip-license --prefix=${TRAVIS_TPLS_DIR}/cmake/
  - export PATH=${TRAVIS_TPLS_DIR}/cmake/bin:$PATH
script:
  # set git user info     
  - git config --global user.email "blt-dev@llnl.gov"
  - git config --global user.name  "BLT Robot"
  - BLT_SOURCE_DIR=${TRAVIS_BUILD_DIR}
  - cmake --version
  - cd $TRAVIS_BUILD_DIR/..
  # copy our internal testing project
  - cp -r blt/tests/internal blt-test
  # create a git repo for blt-test to test the git macros
  - cd blt-test
  - git init
  - git add -A
  - git commit -a -m "Initial Commit"
  - git checkout -b test-branch
  - git tag test-tag  
  - cd ..  
  # create an out-of-source build dir and an install dir
  - mkdir travis-debug-build
  - mkdir travis-debug-install
  # sanity check
  - ls
  - ls blt-test
  # change into build dir
  - cd travis-debug-build
  # point to blt
  - CMAKE_OPTS="-DBLT_SOURCE_DIR=${BLT_SOURCE_DIR}"
  # build type and install loc
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_BUILD_TYPE=Debug"
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_INSTALL_PREFIX=../travis-debug-install"
  # c & c++ compilers
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_C_COMPILER=${BLT_CC}"
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_CXX_COMPILER=${BLT_CXX}"
  # gtest support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_GTEST=${BLT_GTEST}"
  # gmock support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_GMOCK=${BLT_GMOCK}"
  # fruit support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_FRUIT=${BLT_FRUIT}"
  # benchmarking
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_BENCHMARKS=ON"
  # enable fortran support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_FORTRAN=${BLT_FORTRAN}"
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_Fortran_COMPILER=${BLT_FC}"
  # openmp support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_OPENMP=${BLT_OPENMP}"
  # mpi support
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_MPI=ON"
  - CMAKE_OPTS="${CMAKE_OPTS} -DMPI_C_COMPILER=mpicc"
  - CMAKE_OPTS="${CMAKE_OPTS} -DMPI_CXX_COMPILER=mpicc"
  - CMAKE_OPTS="${CMAKE_OPTS} -DMPI_Fortran_COMPILER=mpif90"
  # test git macros
  - CMAKE_OPTS="${CMAKE_OPTS} -DTEST_GIT_MACROS=ON"
  # configure with cmake
  - cmake  ${CMAKE_OPTS} ../blt-test
  # build, link, and triumph 
  - make
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  #########################################################
  #########################################################
  #  tutorial tests
  #########################################################
  #########################################################
  # override prev gtest setting, these projects req gtest
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_GTEST=ON"
  #########################################################
  # test docs/tutorial/blank_project
  #########################################################
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p test-tutorial/blank_project
  - cd test-tutorial/blank_project
  - cmake ${CMAKE_OPTS} ${BLT_SOURCE_DIR}/docs/tutorial/blank_project
  - make
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  #########################################################
  # test docs/tutorial/calc_pi
  #########################################################
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p test-tutorial/calc_pi
  - cd test-tutorial/calc_pi
  - cmake ${CMAKE_OPTS} ${BLT_SOURCE_DIR}/docs/tutorial/calc_pi
  - make
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install

  

notifications:
  email:
    recipients:
      - cyrush@llnl.gov
    on_success: always
    on_failure: always
